<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客在GitHub部署</title>
    <link href="/2025/07/22/my-first-blog/"/>
    <url>/2025/07/22/my-first-blog/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo博客GitHub部署与源码管理完全指南"><a href="#Hexo博客GitHub部署与源码管理完全指南" class="headerlink" title="Hexo博客GitHub部署与源码管理完全指南"></a>Hexo博客GitHub部署与源码管理完全指南</h2><p>本文详细介绍如何将Hexo博客部署到GitHub Pages，如何管理博客源码，以及解决常见的部署问题。</p><h3 id="一、部署Hexo博客到GitHub-Pages"><a href="#一、部署Hexo博客到GitHub-Pages" class="headerlink" title="一、部署Hexo博客到GitHub Pages"></a>一、部署Hexo博客到GitHub Pages</h3><h4 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h4><p>在部署之前，确保你已经：</p><ul><li>安装了Node.js、Git和Hexo</li><li>已经初始化了Hexo博客</li><li>在GitHub上创建了名为username.github.io的仓库（用你的GitHub用户名替换username）</li></ul><h4 id="2-安装部署插件"><a href="#2-安装部署插件" class="headerlink" title="2. 安装部署插件"></a>2. 安装部署插件</h4><p>Hexo提供了方便的Git部署插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h4 id="3-配置部署信息"><a href="#3-配置部署信息" class="headerlink" title="3. 配置部署信息"></a>3. 配置部署信息</h4><p>修改Hexo根目录下的_config.yml文件，找到并编辑deploy部分：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/username/username.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>记得将username替换为你的GitHub用户名。</p><h4 id="4-执行部署命令"><a href="#4-执行部署命令" class="headerlink" title="4. 执行部署命令"></a>4. 执行部署命令</h4><p>使用以下命令部署博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>或者使用简写形式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>执行后，Hexo会将生成的静态文件推送到你的GitHub仓库。</p><h3 id="二、创建独立仓库管理博客源码"><a href="#二、创建独立仓库管理博客源码" class="headerlink" title="二、创建独立仓库管理博客源码"></a>二、创建独立仓库管理博客源码</h3><p>当你部署Hexo到GitHub Pages时，默认只会上传编译后的静态文件（在public目录中）。为了管理和备份完整的博客源码，我们需要创建一个独立的仓库。</p><h4 id="1-在GitHub上创建新仓库"><a href="#1-在GitHub上创建新仓库" class="headerlink" title="1. 在GitHub上创建新仓库"></a>1. 在GitHub上创建新仓库</h4><ul><li>登录GitHub</li><li>点击右上角”+”图标 → “New repository”</li><li>设置仓库名称，如hexo_next_blog</li><li>添加描述（可选）：”Hexo博客源码”</li><li>选择公开或私有（推荐设为私有以保护源码）</li><li>不要初始化仓库（不添加README、.gitignore等）</li><li>点击”Create repository”创建仓库</li></ul><h4 id="2-配置本地Git仓库"><a href="#2-配置本地Git仓库" class="headerlink" title="2. 配置本地Git仓库"></a>2. 配置本地Git仓库</h4><p>在本地博客根目录下执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 初始化Git仓库（如果尚未初始化）</span><br>git init<br><br><span class="hljs-comment"># 创建适当的.gitignore文件</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;public/&quot;</span> &gt;&gt; .gitignore<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;db.json&quot;</span> &gt;&gt; .gitignore<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;.deploy_git/&quot;</span> &gt;&gt; .gitignore<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;node_modules/&quot;</span> &gt;&gt; .gitignore<br><br><span class="hljs-comment"># 添加所有文件到暂存区</span><br>git add .<br><br><span class="hljs-comment"># 提交更改</span><br>git commit -m <span class="hljs-string">&quot;初始化博客源码&quot;</span><br><br><span class="hljs-comment"># 添加远程仓库（替换username为你的GitHub用户名）,如果已有origin，改变origin名称，例如hexo，后续push时统一</span><br>git remote add origin https://github.com/username/hexo_next_blog.git<br><br><span class="hljs-comment"># 推送到GitHub</span><br>git branch -M main<br>git push -u origin main<br></code></pre></td></tr></table></figure><p>执行完成后，你的完整博客源码就备份到了GitHub上。</p><h4 id="3-日常更新流程"><a href="#3-日常更新流程" class="headerlink" title="3. 日常更新流程"></a>3. 日常更新流程</h4><p>每次修改博客后，使用以下步骤更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#1.保存源码更改</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;更新博客内容：[简短描述]&quot;</span><br>git push origin main<br><span class="hljs-comment">#2.部署博客到GitHub Pages</span><br>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>或者部署自动化脚本<br>你可以将生成与部署命令写入脚本文件，便于以后快速部署。示例脚本 deploy.sh 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 清理旧文件</span><br>hexo clean<br><span class="hljs-comment"># 生成新文件</span><br>hexo g<br><span class="hljs-comment"># 部署到 GitHub Pages</span><br>hexo d<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#给脚本执行权限</span><br><span class="hljs-built_in">chmod</span> +x deploy.sh <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LiuXiangBiao</title>
    <link href="/2025/07/22/hello-world/"/>
    <url>/2025/07/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
